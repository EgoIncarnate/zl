STMT = 
     "if" "()" STMT ("else" STMT)?
   / "do" STMP "while" "()" ';'
   / TOKEN* . ("struct"/"union"/"enum") ID? "{}" TOKEN*_ ';'
   / TOKEN* . (';' / "{}")?;

TOKEN =  GROUP
        / STRING
        / COMMENT
        / [^\]\}\)];

GROUP = BRACE / PARAN / BRACK;

BRACE = '{' TOKEN* '}';
PARAN = '(' TOKEN* ')';
BRACK = '[' TOKEN* ']';

STRING = 
    \" (!\"/\\\"/.) \"
  / \' (!\'/\\\'/.) \';

COMMENT = 
  '//' [^\n] '\n';
  '/*' (&'*/'/.)* '*/';

ID =
    [\a]+[\a_]*;

"'{}'" = BRACE SPACING;
"'()'" = PARAN SPACING;
"'[]'" = BRACK SPACING;
"[\a_][\a\d_]*" = _self !([\a\d_]) SPACING;
"[\y]" = _self SPACING;

SPACING =
  [\s]*;

#---
#
#{
#  use re;
#  re {};
#}
#
#EXTEND TOKEN WITH
#   '/' RE_TOKEN*_ '/'
#
#RE_TOKEN := 
#  '[' [^\]] ']'
#  TOKEN
#
#EXTEND GROUP WITH
#  / "re" '{' RE_TOKEN '}'

