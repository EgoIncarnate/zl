#ifndef ZL_IOSTREAM
#define ZL_IOSTREAM

#include <stdio.h>

#include <string>

class ios_base {
  enum _io_state {nostate,badbit,eofbit,failbit,goodbit};
  enum _io_mode {nomode,app,ate,binary,in,out,trunc};
};

class iostream {
  void * dummy;
  virtual void write(const char *, int len = -1) = 0;
  virtual void write_int(int i) = 0;
};

typedef iostream ostream;
typedef iostream istream;

class fstream : public iostream {
  FILE * file;
  fstream();
  fstream(FILE * f);
  void write(const char *, int len = -1);
  void write_int(int i);
};

//static fstream cout(stdout);
//static fstream cerr(stderr);
//static fstream cin(stdin);
extern fstream cout;
extern fstream cerr;
extern fstream cin;

inline ostream & operator<<(ostream & o, const char * str) {o.write(str); return o;}
inline ostream & operator<<(ostream & o, int v) {o.write_int(v); return o;}
inline ostream & operator<<(ostream & o, const string & str) {o.write(str.data(), str.size()); return o;}

static const char * const endl = "\n";

#endif
