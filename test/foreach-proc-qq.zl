new_syntax {
  CUSTOM_STMT := _cur / <foreach> "foreach" "(" {ID} "in" {EXP} ")" {STMT};
}

proc smacro foreach (VAR, WHAT, BODY) {
  Syntax * what = ``WHAT;
  if (!symbol_exists(``begin, what) ||
      !symbol_exists(``end, what))
    return error(what,
                 "Container lacks begin or end method.");
  return `{
    typeof(WHAT) & what = WHAT;
    typeof(what.begin()) i=what.begin(), e=what.end();
    for (;i != e; ++i) {typeof(*i) & VAR = *i; BODY;}
  };
}

class X {
  int * data;
  size_t sz;
  int * begin() {return data;}
  int * end() {return data + sz;}
};

int main() {
  X x;
  int d[4] = {1, 5, 3, 2};
  x.data = d;
  x.sz = 4;
  foreach(el in x) {printf("%d\n", el);}
  return 0;
}
