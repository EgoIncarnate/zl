{ global:
  new_mark_f;
  syntax_simple;
  syntax_num_args;
  syntax_part;
  syntax_flag;
  syntax_eq;
  syntax_args;
  new_syntax_list;
  syntax_list_empty;
  syntax_list_size;
  syntax_list_append;
  syntax_list_append_flag;
  syntax_list_append_all;
  syntax_list_reverse;
  syntax_list_replace;
  syntax_enum_next;
  syntax_enum_clone;
  match_f;
  match_args_f;
  match_local;
  match_var;
  match_varl;
  make_mid;
  replace;
  empty_context;
  get_context;
  replace_context;
  partly_expand;
  partly_expand_list;
  expand_id;
  pre_parse;
  reparse;
  string_to_syntax;
  syntax_to_string;
  dump_syntax;
  user_type_info;
  user_type_module;
  module_info;
  module_symbols;
  module_have_symbol;
  new_module_builder;
  module_builder_add;
  module_builder_to_syntax;
  new_user_type_builder;
  ct_value;
  temp_environ;
  new_scope;
  error;
  get_symbol_prop;
  symbol_exists;
  user_type_have_default_constructor;
  user_type_have_copy_constructor;
  user_type_have_assign;
  user_type_can_have_assign;
  user_type_have_destructor;
  mangle_name;
  mangle_fun_parms;
  gdb_breakpoint;
  stash_ptr_in_syntax;
  extract_ptr_from_syntax;
  stringify;
  ct_malloc;
  ct_malloc_atomic;
  ct_free;
  symbol_num;
  symbol_where;
  symbol_asm_hidden;
  symbol_name;
  symbol_uniq_name;
  symbol_to_type;
  symbol_to_fun_type;
  symbol_get_prop;
  type_to_symbol;
  type_root;
  type_subtype;
  type_qualifiers;
  type_tag;
  type_is_scalar;
  type_is_qualified;
  type_is_pointer;
  type_is_reference;
  type_is_array;
  type_is_fun;
  type_is_user;
  fun_type_ret_type;
  fun_type_num_parms;
  fun_type_parm_type;
  environ_get_abi_info;
  gather_antiquotes;
  match_antiquotes;
  match_aq_var;
  mark_antiquotes;
};
